/*
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        versionCode 1
        versionName "1.0"

        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

        testOptions.unitTests.includeAndroidResources = true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    def lifecycle_version = '2.1.0'
    def material_version = '1.0.0'
    def navigation_version = '2.1.0'
    def work_version = '2.2.0'
    def paging_version = '2.1.1'
    def timber_version = '4.7.1'
    def glide_version = '4.9.0'
    def toothpick_version = '3.1.0'
    def smoothie_version = '3.1.0'

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines"

    api "androidx.media:media:$androidx_media_version"

    api "com.google.code.gson:gson:$gson_version"

    // ExoPlayer dependencies

    // This allows UAMP to utilize a local version of ExoPlayer, which is particularly
    // useful for extending the MediaSession extension, as well as for testing and
    // customization. If the ":exoplayer-library-core" project is included, we assume
    // the others are included as well.
    if (findProject(':exoplayer-library-core') != null) {
        api project(':exoplayer-library-core')
        api project(':exoplayer-library-ui')
        api project(':exoplayer-extension-mediasession')
    } else {
        api "com.google.android.exoplayer:exoplayer-core:$exoplayer_version"
        api "com.google.android.exoplayer:exoplayer-ui:$exoplayer_version"
        api "com.google.android.exoplayer:extension-mediasession:$exoplayer_version"
    }

    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    //Toothpick
    api "com.github.stephanenicolas.toothpick:toothpick-runtime:$toothpick_version"
    api "com.github.stephanenicolas.toothpick:smoothie:$smoothie_version"
    api "com.github.stephanenicolas.toothpick:smoothie-lifecycle-ktp:$smoothie_version"
    api "com.github.stephanenicolas.toothpick:ktp:$toothpick_version"
    kapt "com.github.stephanenicolas.toothpick:toothpick-compiler:$toothpick_version"

    // Tools
    implementation "com.jakewharton.timber:timber:$timber_version"

    // moshi
    implementation "com.squareup.retrofit2:converter-moshi:2.6.2"
    implementation "com.squareup.moshi:moshi:1.8.0"
    implementation "com.squareup.moshi:moshi-kotlin:1.8.0"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:1.8.0"

    // room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    //Paging
    implementation 'androidx.paging:paging-runtime:2.1.1'
    implementation 'androidx.paging:paging-runtime-ktx:2.1.1'

    //Live data and life cycles
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"

    // firebase
    implementation "com.google.firebase:firebase-config:19.1.0"
    implementation 'com.firebaseui:firebase-ui-database:3.2.2'
    implementation "com.google.firebase:firebase-database:19.2.0"
    implementation "com.google.firebase:firebase-auth:19.2.0"
    implementation "com.google.firebase:firebase-config:19.1.0"

    // Glide dependencies
    api "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Testing
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
}
